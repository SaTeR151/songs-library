// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/info": {
            "get": {
                "description": "get song info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "GetSongInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "song name",
                        "name": "song",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group name",
                        "name": "group",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/song": {
            "get": {
                "description": "get song",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "GetSong",
                "parameters": [
                    {
                        "type": "string",
                        "description": "song id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "description": "Song update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "put"
                ],
                "summary": "PutSong",
                "parameters": [
                    {
                        "type": "string",
                        "description": "song id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "Adding song",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post"
                ],
                "summary": "PostSong",
                "responses": {}
            },
            "delete": {
                "description": "Delete song",
                "tags": [
                    "delete"
                ],
                "summary": "DeleteSong",
                "parameters": [
                    {
                        "type": "string",
                        "description": "song id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/songs": {
            "get": {
                "description": "get list song",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "GetListSong",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limit songs in body",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offsetting the song list",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "song name",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "group name",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "song release date ",
                        "name": "release_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "song lyrics",
                        "name": "lyric",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "field sorting",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sorting type",
                        "name": "type_sort",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Song Library API",
	Description:      "API server for Song Library Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
